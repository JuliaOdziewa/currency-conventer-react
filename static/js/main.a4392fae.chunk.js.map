{"version":3,"sources":["currencies.js","Form/Result/index.js","Form/index.js","App.js","reportWebVitals.js","index.js"],"names":["currencies","rate","name","short","Result","result","className","undefined","sourceAmount","toFixed","targetAmount","currency","Form","calculateResult","useState","setCurrency","amount","setAmount","onSubmit","event","preventDefault","value","onChange","target","type","step","min","placeholder","required","map","App","setResult","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAAaA,EAAa,CACtB,CACIC,KAAM,KACNC,KAAM,OACNC,MAAO,OAEX,CACIF,KAAM,KACNC,KAAM,yBACNC,MAAO,OAEX,CACIF,KAAM,IACNC,KAAM,wBACNC,MAAO,OAEX,CACIF,KAAM,KACNC,KAAM,wBACNC,MAAO,Q,qBCHAC,EAdA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACX,mBAAGC,UAAU,eAAb,cACgBC,IAAXF,GACG,qCACMA,EAAOG,aAAcC,QAAQ,GADnC,mBAGI,mCACMJ,EAAOK,aAAcD,QAAQ,GADnC,OAC6CJ,EAAOM,kBCsDrDC,EA1DF,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,gBAAiBR,EAAa,EAAbA,OAC7B,EAAgCS,mBAASd,EAAW,GAAGG,OAAvD,mBAAOQ,EAAP,KAAiBI,EAAjB,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KAQA,OACI,sBAAMX,UAAU,OAAOY,SANV,SAACC,GACdA,EAAMC,iBACNP,EAAgBF,EAAUK,IAI1B,SACI,2BAAUV,UAAU,iBAApB,UACI,wBAAQA,UAAU,eAAlB,8BACA,8BACI,uBAAOA,UAAU,cAAjB,0BAGA,uBACIe,MAAOL,EACPM,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBN,EAAUM,EAAOF,QAC3CG,KAAK,SACLC,KAAK,MACLC,IAAI,OACJC,YAAY,cACZC,UAAQ,OAEhB,8BACI,uBAAOtB,UAAU,cAAjB,SACI,sBAAMA,UAAU,kBAAhB,6BAIJ,wBACIe,MAAOV,EACPW,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBR,EAAYQ,EAAOF,QAFjD,SAIKrB,EAAW6B,KAAK,SAAAlB,GAAQ,OACrB,wBAEIU,MAAOV,EAASR,MAFpB,SAGKQ,EAAST,MAFLS,EAASR,eAQ9B,4BACI,wBAAQG,UAAU,eAAlB,wBAIJ,cAAC,EAAD,CAAQD,OAAQA,UC9BjByB,MAvBf,WACE,MAA4BhB,qBAA5B,mBAAOT,EAAP,KAAe0B,EAAf,KAYA,OACE,8BACE,cAAC,EAAD,CACE1B,OAAQA,EACRQ,gBAdkB,SAACF,EAAUK,GACjC,IAAMf,EAAOD,EAAWgC,MAAK,qBAAG7B,QAAsBQ,KAAUV,KAEhE8B,EAAU,CACRvB,cAAeQ,EACfN,aAAcM,EAASf,EACvBU,mBCDSsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a4392fae.chunk.js","sourcesContent":["export const currencies = [\r\n    {\r\n        rate: 4.57,\r\n        name: \"Euro\",\r\n        short: \"EUR\",\r\n    },\r\n    {\r\n        rate: 3.78,\r\n        name: \"Dolar amerykański\",\r\n        short: \"USD\",\r\n    },\r\n    {\r\n        rate: 0.14,\r\n        name: \"Hrywna ukraińska\",\r\n        short: \"UAH\",\r\n    },\r\n    {\r\n        rate: 0.013,\r\n        name: \"Forint węgierski\",\r\n        short: \"HUF\",\r\n    },\r\n];\r\n\r\n","import \"./index.css\";\r\n\r\nconst Result = ({ result }) => (\r\n    <p className=\"form__result\">\r\n        {result !== undefined && (\r\n            <>\r\n                {(result.sourceAmount).toFixed(2)}&nbsp;PLN&nbsp;=&nbsp;\r\n\r\n                <strong>\r\n                    {(result.targetAmount).toFixed(2)}&nbsp;{result.currency}\r\n                </strong>\r\n            </>\r\n        )}\r\n    </p>\r\n);\r\n\r\nexport default Result;","import \"./index.css\";\r\nimport { useState } from \"react\";\r\nimport { currencies } from \"../currencies\";\r\nimport Result from \"./Result\";\r\n\r\nconst Form = ({ calculateResult, result }) => {\r\n    const [currency, setCurrency] = useState(currencies[0].short);\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateResult(currency, amount);\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onSubmit}>\r\n            <fieldset className=\"form__fieldset\">\r\n                <legend className=\"form__legend\">Kalkulator Walut</legend>\r\n                <p>\r\n                    <label className=\"form__label\">\r\n                        Przelicz z :\r\n                    </label>\r\n                    <input\r\n                        value={amount}\r\n                        onChange={({ target }) => setAmount(target.value)}\r\n                        type=\"number\"\r\n                        step=\"any\"\r\n                        min=\"0.01\"\r\n                        placeholder=\"Kwota w PLN\"\r\n                        required />\r\n                </p>\r\n                <p>\r\n                    <label className=\"form__label\">\r\n                        <span className=\"form__labelText\">\r\n                            Przelicz na :\r\n                        </span>\r\n                    </label>\r\n                    <select\r\n                        value={currency}\r\n                        onChange={({ target }) => setCurrency(target.value)}>\r\n\r\n                        {currencies.map((currency => (\r\n                            <option\r\n                                key={currency.short}\r\n                                value={currency.short}>\r\n                                {currency.name}\r\n                            </option>\r\n                        )))}\r\n\r\n                    </select>\r\n                </p>\r\n                <p>\r\n                    <button className=\"form__button\">\r\n                        Przelicz\r\n                    </button>\r\n                </p>\r\n                <Result result={result} />\r\n            </fieldset>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import { useState } from \"react\";\r\nimport { currencies } from \"./currencies\";\r\nimport Form from \"./Form\";\r\n\r\nfunction App() {\r\n  const [result, setResult] = useState();\r\n\r\n  const calculateResult = (currency, amount) => {\r\n    const rate = currencies.find(({ short }) => short === currency).rate;\r\n\r\n    setResult({\r\n      sourceAmount: +amount,\r\n      targetAmount: amount / rate,\r\n      currency,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        result={result}\r\n        calculateResult={calculateResult}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}