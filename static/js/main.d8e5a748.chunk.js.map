{"version":3,"sources":["GlobalStyle.js","currencies.js","Form/Result/styled.js","Form/Result/index.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","Form/styled.js","Form/index.js","App.js","reportWebVitals.js","index.js","theme.js"],"names":["GlobalStyle","createGlobalStyle","currencies","rate","name","short","Wrapper","styled","p","theme","color","lipstick","Result","result","undefined","sourceAmount","toFixed","targetAmount","currency","div","grey","formatDate","date","toLocaleString","weekday","hour","minute","second","day","month","Clock","useState","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","Fieldset","fieldset","Legend","legend","Label","label","Button","button","Form","setCurrency","amount","setAmount","setResult","className","onSubmit","event","preventDefault","find","calculateResult","value","onChange","target","type","step","min","placeholder","required","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","oldRose","lightOldRose","document","getElementById"],"mappings":"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","file":"static/js/main.d8e5a748.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    #root {\r\n        font-family: 'Poppins', sans-serif;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        min-height: 100vh;\r\n        margin: 0 auto;\r\n        padding: 15px;\r\n        background-image: url(https://wallpapercave.com/wp/wp8375015.jpg);\r\n        background-size: cover;\r\n        background-position: center;\r\n    }\r\n\r\n\r\n`;","export const currencies = [\r\n    {\r\n        rate: 4.57,\r\n        name: \"Euro\",\r\n        short: \"EUR\",\r\n    },\r\n    {\r\n        rate: 3.78,\r\n        name: \"Dolar amerykański\",\r\n        short: \"USD\",\r\n    },\r\n    {\r\n        rate: 0.14,\r\n        name: \"Hrywna ukraińska\",\r\n        short: \"UAH\",\r\n    },\r\n    {\r\n        rate: 0.013,\r\n        name: \"Forint węgierski\",\r\n        short: \"HUF\",\r\n    },\r\n];\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.p`\r\n    color: ${({ theme }) => theme.color.lipstick};\r\n    text-align: center;\r\n`;","import { Wrapper } from \"./styled\";\r\n\r\nconst Result = ({ result }) => (\r\n    <Wrapper>\r\n        {result !== undefined && (\r\n            <>\r\n                {(result.sourceAmount).toFixed(2)}&nbsp;PLN&nbsp;=&nbsp;\r\n\r\n                <strong>\r\n                    {(result.targetAmount).toFixed(2)}&nbsp;{result.currency}\r\n                </strong>\r\n            </>\r\n        )}\r\n    </Wrapper>\r\n);\r\n\r\nexport default Result;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    text-align: right;\r\n    color: ${({ theme }) => theme.color.grey};\r\n    font-size: 90%;\r\n`;","import { Wrapper } from \"./styled\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\n\r\nconst formatDate = (date) => date.toLocaleString(undefined, {\r\n    weekday: \"long\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\",\r\n    day: \"numeric\",\r\n    month: \"long\"\r\n});\r\n\r\nconst Clock = () => {\r\n    const date = useCurrentDate();\r\n\r\n    return (\r\n        <Wrapper>\r\n            Dzisiaj jest {\" \"}\r\n            {formatDate(date)}\r\n        </Wrapper>\r\n    )\r\n};\r\n\r\nexport default Clock;","import { useEffect, useState } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    return date;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    flex-basis: 700px;\r\n    margin: 20px;\r\n    padding: 40px;\r\n    border-color: rgba(128, 128, 128, 0.973);\r\n    border-radius: 25px;\r\n    background-color: rgb(223, 223, 223);\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    text-align: center;\r\n    color: white;\r\n    background-color: rgba(156, 33, 74, 0.973);\r\n    padding: 10px 5px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    color: ${({ theme }) => theme.color.lipstick};\r\n    padding: 10px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    border: none;\r\n    background-color: ${({ theme }) => theme.color.lipstick};\r\n    color: white;\r\n    width: 100%;\r\n    padding: 5px;\r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n    }\r\n\r\n    &:active {\r\n        filter: brightness(120%);\r\n    }\r\n`;","import { useState } from \"react\";\r\nimport { currencies } from \"../currencies\";\r\nimport Result from \"./Result\";\r\nimport Clock from \"../Clock\";\r\nimport { Fieldset, Label, Legend, Button } from \"./styled\";\r\n\r\nconst Form = () => {\r\n    const [currency, setCurrency] = useState(currencies[0].short);\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [result, setResult] = useState();\r\n\r\n    const calculateResult = (currency, amount) => {\r\n        const rate = currencies.find(({ short }) => short === currency).rate;\r\n\r\n        setResult({\r\n            sourceAmount: +amount,\r\n            targetAmount: amount / rate,\r\n            currency,\r\n        });\r\n    };\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateResult(currency, amount);\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onSubmit}>\r\n            <Fieldset>\r\n                <Clock />\r\n                <Legend>Kalkulator Walut</Legend>\r\n                <p>\r\n                    <Label>\r\n                        Przelicz z :\r\n                    </Label>\r\n                    <input\r\n                        value={amount}\r\n                        onChange={({ target }) => setAmount(target.value)}\r\n                        type=\"number\"\r\n                        step=\"any\"\r\n                        min=\"0.01\"\r\n                        placeholder=\"Kwota w PLN\"\r\n                        required />\r\n                </p>\r\n                <p>\r\n                    <Label>\r\n                        <span className=\"form__labelText\">\r\n                            Przelicz na :\r\n                        </span>\r\n                    </Label>\r\n                    <select\r\n                        value={currency}\r\n                        onChange={({ target }) => setCurrency(target.value)}>\r\n                        {currencies.map((currency => (\r\n                            <option\r\n                                key={currency.short}\r\n                                value={currency.short}>\r\n                                {currency.name}\r\n                            </option>\r\n                        )))}\r\n                    </select>\r\n                </p>\r\n                <p>\r\n                    <Button>\r\n                        Przelicz\r\n                    </Button>\r\n                </p>\r\n                <Result result={result} />\r\n            </Fieldset>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import Form from \"./Form\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Form />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from './GlobalStyle';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      < GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    color: {\r\n        grey: \"#808080\",\r\n        lipstick: \"#9B2149\",\r\n        oldRose: \"#B12453\",\r\n        lightOldRose: \"#C5295E\",\r\n    }\r\n}"],"sourceRoot":""}